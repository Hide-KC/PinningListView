apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'org.jetbrains.dokka-android'

ext {
    groupId = 'work.kcpoipoi'
    artifactId = 'pinninglistview'
    libVersion = '0.0.1'
}

dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/javadoc"
}

group = groupId
version = libVersion

def siteUrl = "https://github.com/Hide-KC/PinningListView"
def gitUrl = "https://github.com/Hide-KC/PinningListView.git"

def loadProperties(filename) {
    def props = new Properties()
    file(filename).withInputStream {
        props.load(it)
    }
    return props
}

bintray {
    def props = loadProperties("$gradle.gradleUserHomeDir/gradle.properties")

    user = props.bintray_user
    key = props.bintray_key

    configurations = ['archives'] //When uploading configuration files
    pkg {
        repo = 'maven'
        name = "PinningListView"
        desc = 'Custom RecyclerView that draws a header that represents a break.'
        publish = true
        override = true
        websiteUrl = siteUrl
        issueTrackerUrl = 'https://github.com/Hide-KC/PinningListView/issues'
        vcsUrl = gitUrl
        licenses = ['MIT']
        labels = ['aar', 'android', 'custom view', 'recycler view']
        publicDownloadNumbers = true
        version {
            name = libVersion
        }
    }
}

install {
    repositories.mavenInstaller {
        pom.project {
            packaging 'aar'
            groupId group
            artifactId artifactId
            name artifactId
            version version
            url siteUrl
            licenses {
                license {
                    name 'MIT License.'
                    url 'https://opensource.org/licenses/mit-license.php'
                }
            }
            developers {
                developer {
                    id 'kcpoipoi'
                    name 'KC'
                    email 'kcs.dev.labo@gmail.com'
                }
            }
            scm {
                connection siteUrl
                developerConnection siteUrl
                url siteUrl
            }
        }
    }
}

task sourcesJar(type: Jar) doLast {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

task javadocJar(type: Jar, dependsOn: dokka) {

}

artifacts {
    archives sourcesJar
    archives javadocJar
}